{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome These documents and guides log the various installation and configuration procedures of services used in my homelab. Every guide is made while the services are being installed and configured, so they include every step needed to get that service running. If you spot a problem, please follow the link in the upper-right corner to the Github repository and open an issue or create a pull request. I don't want to spread misinformation, so please point out any problems as soon as possible.","title":"Welcome"},{"location":"#welcome","text":"These documents and guides log the various installation and configuration procedures of services used in my homelab. Every guide is made while the services are being installed and configured, so they include every step needed to get that service running. If you spot a problem, please follow the link in the upper-right corner to the Github repository and open an issue or create a pull request. I don't want to spread misinformation, so please point out any problems as soon as possible.","title":"Welcome"},{"location":"guides/services/xen-orchestra/centos/","text":"Xen Orchestra - CentOS Installation Dependencies Node Yarn Add the repositories for Node.js and Yarn : curl -sL https://rpm.nodesource.com/setup_8.x | sudo -E bash - curl -sL https://dl.yarnpkg.com/rpm/yarn.repo | sudo tee /etc/yum.repos.d/yarn.repo Update the new repositories and install any outstanding updates: sudo yum update -y Install build tools and Xen Orchestra prerequisites: Note The Development Tools group is needed to build Redis . This can be skipped if Redis is already installed. Not everything in the group is required, but it's easier to install what is required this way. sudo yum groupinstall -y Development Tools sudo yum install -y libpng-devel yarn Redis CentOS repositories are several major versions behind, so build Redis from the sources. Download and unpack the latest stable sources: curl -sL http://download.redis.io/redis-stable.tar.gz -o redis-stable.tar.gz tar xzf redis-stable.tar.gz cd redis-stable Compile and install: make sudo make install Create the configuration directory and copy the default configuration file: sudo mkdir /etc/redis sudo cp redis.conf /etc/redis Open /etc/redis/redis.conf for editing and change the supervised and dir settings: -- supervised no ++ supervised systemd -- dir ./ ++ dir /var/lib/redis Create a user for Redis: sudo adduser -Mr -s /sbin/nologin redis Create the directory specified in the dir setting of the configuration file and give permissions to the new redis user: sudo mkdir /var/lib/redis sudo chown redis:redis /var/lib/redis sudo chmod 770 /var/lib/redis Create /etc/systemd/system/redis.service . Enable autostart and start the new Redis service: sudo systemctl daemon-reload sudo systemctl enable --now redis Application Create a user for Xen Orchestra: Note A user directory is created for this user so Yarn has a writable persistent cache location. Never run Xen Orchestra, or any web service as root . sudo adduser -mr -s /sbin/nologin xo Copy the master branch from Github: sudo git clone -b master http://github.com/vatesfr/xen-orchestra /opt/xen-orchestra Change into the new application directory and change the ownership of all files to the new non-root user ( xo ): cd /opt/xen-orchestra sudo chown -R xo:xo . Compile and build the application using Yarn: sudo -u xo yarn sudo -u xo yarn build Create a data directory for the xo-server component and give ownership to the current user: sudo mkdir /var/lib/xo-server sudo chown -R xo:xo /var/lib/xo-server Change into the xo-server component directory: cd packages/xo-server Copy the sample configuration file to the active configuration file: Note The configuration file must be named .xo-server.yaml . sudo -u xo cp sample.config.yaml .xo-server.yaml Open .xo-server.yaml for editing as the xo user and enter the path for the xo-web component. http: mounts: -- # / : /path/to/xo-web/dist/ ++ / : ../xo-web/dist/ Allow node to listen on privileged ports: Note This is only required if Xen Orchestra will be accessed on a privileged port (less than 1000). sudo setcap cap_net_bind_service = +ep $( which node ) sudo firewall-cmd --permanent --zone = public --add-port =80 /tcp sudo firewall-cmd --reload Create /etc/systemd/system/xo.service . Enable autostart and start the new Xen Orchestra service: sudo systemctl daemon-reload sudo systemctl enable --now xo Updating Stop the Xen Orchestra service: sudo systemctl stop xo Change into the Xen Orchestra parent directory: cd /opt/xen-orchestra Pull the latest sources from Github: sudo -u xo git pull --ff-only Compile and build the updated sources with Yarn: sudo -u xo yarn sudo -u xo yarn build Start the updated Xen Orchestra service: sudo systemctl start xo Configuration systemd redis.service [ Unit ] Description = Redis In-Memory Data Store After = network.target [ Service ] User = redis Group = redis ExecStart = /usr/local/bin/redis-server /etc/redis/redis.conf ExecStop = /usr/local/bin/redis-cli shutdown Restart = always [ Install ] WantedBy = multi-user.target xo.service [ Unit ] Description = Xen Orchestra Xen Server Web Manager After = network-online.target [ Service ] User = xo Group = xo WorkingDirectory = /opt/xen-orchestra/packages/xo-server ExecStart = /usr/bin/yarn start Restart = always [ Install ] WantedBy = multi-user.target SELinux Todo Create confined contexts for the application and user.","title":"CentOS"},{"location":"guides/services/xen-orchestra/centos/#xen-orchestra-centos","text":"","title":"Xen Orchestra - CentOS"},{"location":"guides/services/xen-orchestra/centos/#installation","text":"","title":"Installation"},{"location":"guides/services/xen-orchestra/centos/#dependencies","text":"","title":"Dependencies"},{"location":"guides/services/xen-orchestra/centos/#node-yarn","text":"Add the repositories for Node.js and Yarn : curl -sL https://rpm.nodesource.com/setup_8.x | sudo -E bash - curl -sL https://dl.yarnpkg.com/rpm/yarn.repo | sudo tee /etc/yum.repos.d/yarn.repo Update the new repositories and install any outstanding updates: sudo yum update -y Install build tools and Xen Orchestra prerequisites: Note The Development Tools group is needed to build Redis . This can be skipped if Redis is already installed. Not everything in the group is required, but it's easier to install what is required this way. sudo yum groupinstall -y Development Tools sudo yum install -y libpng-devel yarn","title":"Node &amp; Yarn"},{"location":"guides/services/xen-orchestra/centos/#redis","text":"CentOS repositories are several major versions behind, so build Redis from the sources. Download and unpack the latest stable sources: curl -sL http://download.redis.io/redis-stable.tar.gz -o redis-stable.tar.gz tar xzf redis-stable.tar.gz cd redis-stable Compile and install: make sudo make install Create the configuration directory and copy the default configuration file: sudo mkdir /etc/redis sudo cp redis.conf /etc/redis Open /etc/redis/redis.conf for editing and change the supervised and dir settings: -- supervised no ++ supervised systemd -- dir ./ ++ dir /var/lib/redis Create a user for Redis: sudo adduser -Mr -s /sbin/nologin redis Create the directory specified in the dir setting of the configuration file and give permissions to the new redis user: sudo mkdir /var/lib/redis sudo chown redis:redis /var/lib/redis sudo chmod 770 /var/lib/redis Create /etc/systemd/system/redis.service . Enable autostart and start the new Redis service: sudo systemctl daemon-reload sudo systemctl enable --now redis","title":"Redis"},{"location":"guides/services/xen-orchestra/centos/#application","text":"Create a user for Xen Orchestra: Note A user directory is created for this user so Yarn has a writable persistent cache location. Never run Xen Orchestra, or any web service as root . sudo adduser -mr -s /sbin/nologin xo Copy the master branch from Github: sudo git clone -b master http://github.com/vatesfr/xen-orchestra /opt/xen-orchestra Change into the new application directory and change the ownership of all files to the new non-root user ( xo ): cd /opt/xen-orchestra sudo chown -R xo:xo . Compile and build the application using Yarn: sudo -u xo yarn sudo -u xo yarn build Create a data directory for the xo-server component and give ownership to the current user: sudo mkdir /var/lib/xo-server sudo chown -R xo:xo /var/lib/xo-server Change into the xo-server component directory: cd packages/xo-server Copy the sample configuration file to the active configuration file: Note The configuration file must be named .xo-server.yaml . sudo -u xo cp sample.config.yaml .xo-server.yaml Open .xo-server.yaml for editing as the xo user and enter the path for the xo-web component. http: mounts: -- # / : /path/to/xo-web/dist/ ++ / : ../xo-web/dist/ Allow node to listen on privileged ports: Note This is only required if Xen Orchestra will be accessed on a privileged port (less than 1000). sudo setcap cap_net_bind_service = +ep $( which node ) sudo firewall-cmd --permanent --zone = public --add-port =80 /tcp sudo firewall-cmd --reload Create /etc/systemd/system/xo.service . Enable autostart and start the new Xen Orchestra service: sudo systemctl daemon-reload sudo systemctl enable --now xo","title":"Application"},{"location":"guides/services/xen-orchestra/centos/#updating","text":"Stop the Xen Orchestra service: sudo systemctl stop xo Change into the Xen Orchestra parent directory: cd /opt/xen-orchestra Pull the latest sources from Github: sudo -u xo git pull --ff-only Compile and build the updated sources with Yarn: sudo -u xo yarn sudo -u xo yarn build Start the updated Xen Orchestra service: sudo systemctl start xo","title":"Updating"},{"location":"guides/services/xen-orchestra/centos/#configuration","text":"","title":"Configuration"},{"location":"guides/services/xen-orchestra/centos/#systemd","text":"","title":"systemd"},{"location":"guides/services/xen-orchestra/centos/#redisservice","text":"[ Unit ] Description = Redis In-Memory Data Store After = network.target [ Service ] User = redis Group = redis ExecStart = /usr/local/bin/redis-server /etc/redis/redis.conf ExecStop = /usr/local/bin/redis-cli shutdown Restart = always [ Install ] WantedBy = multi-user.target","title":"redis.service"},{"location":"guides/services/xen-orchestra/centos/#xoservice","text":"[ Unit ] Description = Xen Orchestra Xen Server Web Manager After = network-online.target [ Service ] User = xo Group = xo WorkingDirectory = /opt/xen-orchestra/packages/xo-server ExecStart = /usr/bin/yarn start Restart = always [ Install ] WantedBy = multi-user.target","title":"xo.service"},{"location":"guides/services/xen-orchestra/centos/#selinux","text":"Todo Create confined contexts for the application and user.","title":"SELinux"}]}